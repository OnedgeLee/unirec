name: Test

on:
  push:
    branches: ["**"]
    paths:
      - "**.py"
      - "unirec/**"
      - "tests/**"
      - "pyproject.toml"
      - "uv.lock"
      - ".github/workflows/test.yml"
  pull_request:
    paths:
      - "**.py"
      - "unirec/**"
      - "tests/**"
      - "pyproject.toml"
      - "uv.lock"
      - ".github/workflows/test.yml"

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Install Python
        run: uv python install ${{ matrix.python-version }}

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
            uv-${{ runner.os }}-

      - name: Sync dev deps
        run: uv sync --locked --group dev --no-install-project

      - name: Ensure smoke test
        run: |
          if ! ls tests/*.py >/dev/null 2>&1; then
            mkdir -p tests
            cat > tests/test_smoke.py <<'PY'
            def test_smoke():
                assert True
            PY
          fi

      - name: Run pytest
        env:
          PYTHONPATH: .
        run: |
          uv run --group dev pytest -q --maxfail=1 --disable-warnings \
                 --cov=unirec --cov-report=xml --cov-report=term-missing

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
